<?xml version="1.0" encoding="UTF-8"?>
<l:language xmlns:l="http://cedric.bosdonnat.free.fr/coooder/language/"    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"    xsi:schemaLocation="http://cedric.bosdonnat.free.fr/coooder/language/ language.xsd " 	id="verilog" name="Verilog" objectOriented="false" escapeChar="\"><l:comments caseSensitive="false"><l:single id="comments_1"><l:opening>//</l:opening></l:single><l:multiple><l:opening>/*</l:opening><l:closing>*/</l:closing></l:multiple></l:comments><l:symbols><l:set id="symbols_0"><l:value>(</l:value><l:value>)</l:value><l:value>{</l:value><l:value>}</l:value><l:value>[</l:value><l:value>]</l:value><l:value>=</l:value><l:value>+</l:value><l:value>-</l:value><l:value>*</l:value><l:value>/</l:value><l:value>!</l:value><l:value>%</l:value><l:value>^</l:value><l:value>&amp;</l:value><l:value>|</l:value><l:value>~</l:value><l:value>?</l:value><l:value>:</l:value><l:value>#</l:value><l:value>&lt;&lt;</l:value><l:value>&lt;&lt;&lt;</l:value><l:value>&gt;</l:value><l:value>&lt;</l:value><l:value>&gt;=</l:value><l:value>&lt;=</l:value><l:value>@</l:value><l:value>;</l:value><l:value>,</l:value></l:set></l:symbols><l:quotemarks><l:value>&quot;</l:value></l:quotemarks><l:keywords><l:set id="keywords_1" caseSensitive="false"><l:value>always</l:value><l:value>and</l:value><l:value>assign</l:value><l:value>begin</l:value><l:value>buf</l:value><l:value>bufif0</l:value><l:value>bufif1</l:value><l:value>case</l:value><l:value>casex</l:value><l:value>casez</l:value><l:value>cmos</l:value><l:value>deassign</l:value><l:value>default</l:value><l:value>defparam</l:value><l:value>disable</l:value><l:value>edge</l:value><l:value>else</l:value><l:value>end</l:value><l:value>endcase</l:value><l:value>endfunction</l:value><l:value>endmodule</l:value><l:value>endprimitive</l:value><l:value>endspecify</l:value><l:value>endtable</l:value><l:value>endtask</l:value><l:value>event</l:value><l:value>for</l:value><l:value>force</l:value><l:value>forever</l:value><l:value>function</l:value><l:value>highz0</l:value><l:value>highz1</l:value><l:value>if</l:value><l:value>ifnone</l:value><l:value>initial</l:value><l:value>inout</l:value><l:value>input</l:value><l:value>integer</l:value><l:value>join</l:value><l:value>large</l:value><l:value>macromodule</l:value><l:value>medium</l:value><l:value>module</l:value><l:value>nand</l:value><l:value>negedge</l:value><l:value>nmos</l:value><l:value>nor</l:value><l:value>not</l:value><l:value>notif0</l:value><l:value>notif1</l:value><l:value>or</l:value><l:value>output</l:value><l:value>parameter</l:value><l:value>pmos</l:value><l:value>posedge</l:value><l:value>primitive</l:value><l:value>pull0</l:value><l:value>pull1</l:value><l:value>pulldown</l:value><l:value>pullup</l:value><l:value>rcmos</l:value><l:value>real</l:value><l:value>realtime</l:value><l:value>reg</l:value><l:value>release</l:value><l:value>repeat</l:value><l:value>rnmos</l:value><l:value>rpmos</l:value><l:value>rtran</l:value><l:value>rtranif0</l:value><l:value>rtranif1</l:value><l:value>scalared</l:value><l:value>small</l:value><l:value>specify</l:value><l:value>specparam</l:value><l:value>strong0</l:value><l:value>strong1</l:value><l:value>supply0</l:value><l:value>supply1</l:value><l:value>table</l:value><l:value>task</l:value><l:value>time</l:value><l:value>tran</l:value><l:value>tranif0</l:value><l:value>tranif1</l:value><l:value>tri</l:value><l:value>tri0</l:value><l:value>tri1</l:value><l:value>triand</l:value><l:value>trior</l:value><l:value>trireg</l:value><l:value>vectored</l:value><l:value>wait</l:value><l:value>wand</l:value><l:value>weak0</l:value><l:value>weak1</l:value><l:value>while</l:value><l:value>wire</l:value><l:value>wor</l:value><l:value>xnor</l:value><l:value>xor</l:value></l:set><l:set id="keywords_2" caseSensitive="false"><l:value>$display</l:value><l:value>$monitor</l:value><l:value>$dumpall</l:value><l:value>$dumpfile</l:value><l:value>$dumpflush</l:value><l:value>$dumplimit</l:value><l:value>$dumpoff</l:value><l:value>$dumpon</l:value><l:value>$dumpvars</l:value><l:value>$fclose</l:value><l:value>$fdisplay</l:value><l:value>$fopen</l:value><l:value>$finish</l:value><l:value>$fmonitor</l:value><l:value>$fstrobe</l:value><l:value>$fwrite</l:value><l:value>$fgetc</l:value><l:value>$ungetc</l:value><l:value>$fgets</l:value><l:value>$fscanf</l:value><l:value>$fread</l:value><l:value>$ftell</l:value><l:value>$fseek</l:value><l:value>$frewind</l:value><l:value>$ferror</l:value><l:value>$fflush</l:value><l:value>$feof</l:value><l:value>$random</l:value><l:value>$readmemb</l:value><l:value>$readmemh</l:value><l:value>$readmemx</l:value><l:value>$signed</l:value><l:value>$stime</l:value><l:value>$stop</l:value><l:value>$strobe</l:value><l:value>$time</l:value><l:value>$unsigned</l:value><l:value>$write</l:value></l:set><l:set id="keywords_3" caseSensitive="false"><l:value>`default-net</l:value><l:value>`define</l:value><l:value>`celldefine</l:value><l:value>`default_nettype</l:value><l:value>`else</l:value><l:value>`elsif</l:value><l:value>`endcelldefine</l:value><l:value>`endif</l:value><l:value>`ifdef</l:value><l:value>`ifndef</l:value><l:value>`include</l:value><l:value>`line</l:value><l:value>`nounconnected_drive</l:value><l:value>`resetall</l:value><l:value>`timescale</l:value><l:value>`unconnected_drive</l:value><l:value>`undef</l:value></l:set></l:keywords><l:regexps><l:regexp id="regexp_0" value="\d'[bdh][0-9_a-fA-FxXzZ]+"/><l:regexp id="regexp_1" value="1[0]{0,2}[munpf]?s"/></l:regexps><l:styles><l:style element="comments_1" color="00008B" italic="true"/><l:style element="symbols_0" color="5D478B"/><l:style element="keywords_1" color="A52A2A" bold="true"/><l:style element="keywords_2" color="9932CC"/><l:style element="keywords_3" color="008800"/><l:style element="regexp_0" color="ff0055"/><l:style element="regexp_1" color="ff0055"/><l:style element="comment_multi" color="00008B" italic="true"/><l:style element="string" color="FF00FF"/><l:style element="number" color="ff0055"/><l:style element="escaped" color="9F79EE"/></l:styles></l:language>