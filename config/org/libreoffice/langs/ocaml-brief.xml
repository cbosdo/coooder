<?xml version="1.0" encoding="UTF-8"?>
<l:language xmlns:l="http://cedric.bosdonnat.free.fr/coooder/language/"    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"    xsi:schemaLocation="http://cedric.bosdonnat.free.fr/coooder/language/ language.xsd " 	id="ocaml-brief" name="OCaml (brief)" objectOriented="true" escapeChar=""><l:objectSplitters><l:splitter id="splitter_1" value="."/></l:objectSplitters><l:comments caseSensitive="false"><l:multiple><l:opening>(*</l:opening><l:closing>*)</l:closing></l:multiple></l:comments><l:symbols><l:set id="symbols_0"><l:value>;</l:value><l:value>!</l:value><l:value>:</l:value><l:value>.</l:value><l:value>=</l:value><l:value>%</l:value><l:value>^</l:value><l:value>*</l:value><l:value>-</l:value><l:value>/</l:value><l:value>+</l:value><l:value>&gt;</l:value><l:value>&lt;</l:value><l:value>(</l:value><l:value>)</l:value><l:value>[</l:value><l:value>]</l:value><l:value>&amp;</l:value><l:value>|</l:value><l:value>#</l:value><l:value>'</l:value></l:set></l:symbols><l:quotemarks><l:value>&quot;</l:value></l:quotemarks><l:keywords><l:set id="keywords_1" caseSensitive="false"><l:value>and</l:value><l:value>As</l:value><l:value>asr</l:value><l:value>begin</l:value><l:value>Class</l:value><l:value>Closed</l:value><l:value>constraint</l:value><l:value>do</l:value><l:value>done</l:value><l:value>downto</l:value><l:value>else</l:value><l:value>end</l:value><l:value>exception</l:value><l:value>external</l:value><l:value>failwith</l:value><l:value>false</l:value><l:value>flush</l:value><l:value>for</l:value><l:value>fun</l:value><l:value>function</l:value><l:value>functor</l:value><l:value>if</l:value><l:value>in</l:value><l:value>include</l:value><l:value>inherit</l:value><l:value>incr</l:value><l:value>land</l:value><l:value>let</l:value><l:value>load</l:value><l:value>los</l:value><l:value>lsl</l:value><l:value>lsr</l:value><l:value>lxor</l:value><l:value>match</l:value><l:value>method</l:value><l:value>mod</l:value><l:value>module</l:value><l:value>mutable</l:value><l:value>new</l:value><l:value>not</l:value><l:value>of</l:value><l:value>open</l:value><l:value>option</l:value><l:value>or</l:value><l:value>parser</l:value><l:value>private</l:value><l:value>ref</l:value><l:value>rec</l:value><l:value>raise</l:value><l:value>regexp</l:value><l:value>sig</l:value><l:value>struct</l:value><l:value>stdout</l:value><l:value>stdin</l:value><l:value>stderr</l:value><l:value>then</l:value><l:value>to</l:value><l:value>true</l:value><l:value>try</l:value><l:value>type</l:value><l:value>val</l:value><l:value>virtual</l:value><l:value>when</l:value><l:value>while</l:value><l:value>with</l:value></l:set></l:keywords><l:regexps></l:regexps><l:styles><l:style element="splitter_1" color="060"/><l:style element="symbols_0" color="a52a2a"/><l:style element="keywords_1" color="06c" bold="true"/><l:style element="comment_multi" color="5d478b" italic="true"/><l:style element="string" color="3cb371"/><l:style element="number" color="c6c"/></l:styles></l:language>